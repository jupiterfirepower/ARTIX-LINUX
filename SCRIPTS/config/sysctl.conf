########## Kernel ##########

# Console logging level
kernel.printk = 4 4 1 7 

# The value in this file represents the number of seconds the kernel waits before rebooting on a panic
# reboot machine after kernel panic
kernel.panic = 10

# This value can be used to query and set the run time limit on the maximum shared memory segment size that can be created.
kernel.shmmax = 4294967296 

# This parameter sets the total amount of shared memory pages that can be used system wide.
kernel.shmall = 4194304 

# Defines the maximum size in bytes of a single message queue.
kernel.msgmnb = 65536 

# Defines the maximum allowable size in bytes of any single message in a message queue. This value must not exceed the size of the queue (msgmnb).
kernel.msgmax = 65536 

# enable ExecShield protection
# 2 enables ExecShield by default unless applications bits are set to disabled
# uncomment on systems without NX/XD protections
# check with: dmesg | grep --color '[NX|DX]*protection'
#kernel.exec-shield = 2

# enable ASLR
# turn on protection and randomize stack, vdso page and mmap + randomize brk base address
# Enable ExecShield protection & increase random poolsize.
kernel.randomize_va_space = 2
# kernel.random.poolsize=4096

# controls the System Request debugging functionality of the kernel Disable magic keys
kernel.sysrq = 0

# controls whether core dumps will append the PID to the core filename
# useful for debugging multi-threaded applications
# The default coredump filename is "core". By setting core_uses_pid to 1, the coredump filename becomes core.PID.
kernel.core_uses_pid = 1

# restrict access to kernel address
# kernel pointers printed using %pK will be replaced with 0’s regardless of privileges
# Prevent kernel exploits to resolve addresses/symbols dynamically.
kernel.kptr_restrict = 2

# Ptrace protection using Yama
#   - 1: only a parent process can be debugged
#   - 2: only admins can use ptrace (CAP_SYS_PTRACE capability required)
#   - 3: disables ptrace completely, reboot is required to re-enable ptrace
kernel.yama.ptrace_scope = 3

# restrict kernel logs to root only
kernel.dmesg_restrict = 1

# Disable unprivileged BPF to prevent side-channel attack.
# restrict BPF JIT compiler to root only
kernel.unprivileged_bpf_disabled = 1

# disables kexec as it can be used to livepatch the running kernel
kernel.kexec_load_disabled = 1

# disable unprivileged user namespaces to decrease attack surface
# kernel.unprivileged_userns_clone = 0

# Enable Unprivileged User Namespaces for Exodus Wallet, Brave & Skype (uncomment if use one of these apps).
kernel.unprivileged_userns_clone = 1 

# allow for more PIDs
# this value can be up to:
#   - 32768 (2^15) on a 32-bit system
#   - 4194304 (2^22) on a 64-bit system
kernel.pid_max = 4194304

# restrict perf subsystem usage
kernel.perf_event_paranoid = 3
kernel.perf_cpu_time_max_percent = 1
kernel.perf_event_max_sample_rate = 1

# Prevent useful information for an attacker to exploit kernel vulnerabilities.
kernel.dmesg_restrict = 1

# Disable NMI watchdog debugging to save power.
kernel.nmi_watchdog = 0

# Disable dangerous ftrace debugging.
# kernel.ftrace_enabled = 0 # not supported.

# Boost Kernel Task Scheduler Performance.
kernel.sched_energy_aware = 1

# Profile 1: Low Battery Consumption for Mobile Devices
#kernel.sched_latency_ns=15000000
#kernel.sched_min_granularity_ns=2000000
#kernel.sched_wakeup_granularity_ns=10000000
kernel.sched_child_runs_first = 0
#kernel.sched_tunable_scaling=0
# Profile 2: Device Responsiveness
#kernel.sched_latency_ns=18000000
#kernel.sched_min_granularity_ns=1000000
#kernel.sched_wakeup_granularity_ns=2000000
#kernel.sched_child_runs_first=1
#kernel.sched_tunable_scaling=1 

# Disable Kernel Panic.
#kernel.panic=0
#kernel.panic_on_oops=0

# Disable unprivileged BPF to prevent side-channel attack.
kernel.unprivileged_bpf_disabled = 1

# prevent unprivileged attackers from loading vulnerable line disciplines with the TIOCSETD ioctl
dev.tty.ldisc_autoload = 0

# 2 millions system-wide
# Increase size of file handles and inode cache.
# This value denotes the maximum number of file-
# handles that the Linux kernel will allocate.
fs.file-max = 2097152
fs.nr_open  = 2097152

# Disable coredumps of SUID binaries
fs.suid_dumpable = 0

# Prevent user from creating symlinks & hardlinks they don’t own.
fs.protected_hardlinks = 1
fs.protected_symlinks = 1
fs.protected_fifos = 1
fs.protected_regular = 1

# Security hardening.
# --------------------------------
vm.unprivileged_userfaultfd = 0

# Do less swapping for performance.
# Uncomment vm.laptop_mode for mobile devices to save power & battery!
vm.laptop_mode = 5

# This control is used to define how aggressive the kernel will swap memory pages.
vm.swappiness = 0

# Contains, as a percentage of total available memory that contains free pages
# and reclaimable pages, the number of pages at which a process which is
# generating disk writes will itself start writing out dirty data.
vm.dirty_ratio = 60

# Contains, as a percentage of total available memory that contains free pages
# and reclaimable pages, the number of pages at which the background kernel
# flusher threads will start writing out dirty data.
vm.dirty_background_ratio = 2

vm.dirty_writeback_centisecs = 6000
# vm.dirty_expire_centiseconds = 72000

vm.vfs_cache_pressure = 10
vm.min_free_kbytes = 65536

# Killing off processes that're using too much memory when running out.
vm.oom_kill_allocating_task = 1

# Size of connection tracking table.
# net.netfilter.nf_conntrack_max = 10000000

# If it is set to zero, we disable picking up already established connections.
net.netfilter.nf_conntrack_tcp_loose = 0 
net.netfilter.nf_conntrack_acct = 0
net.netfilter.nf_conntrack_checksum = 0
net.netfilter.nf_conntrack_events = 1
net.netfilter.nf_conntrack_timestamp = 0
net.netfilter.nf_conntrack_tcp_be_liberal = 0
net.netfilter.nf_conntrack_max = 16384
net.netfilter.nf_conntrack_buckets = 65536
net.netfilter.nf_conntrack_tcp_max_retrans = 3
net.netfilter.nf_conntrack_generic_timeout = 120
net.netfilter.nf_conntrack_tcp_timeout_unacknowledged = 30

# Timeout for established (in seconds)
net.netfilter.nf_conntrack_tcp_timeout_established = 1800 
net.netfilter.nf_conntrack_sctp_timeout_established = 1800

# Timeout for close (in seconds)
net.netfilter.nf_conntrack_tcp_timeout_close = 5 
# Timeout for close wait (in seconds)
net.netfilter.nf_conntrack_tcp_timeout_close_wait = 10 
# Timeout for fin wait (in seconds)
net.netfilter.nf_conntrack_tcp_timeout_fin_wait = 15 
# Timeout for last ack (in seconds)
net.netfilter.nf_conntrack_tcp_timeout_last_ack = 15 
# Timeout for syn recv (in seconds)
net.netfilter.nf_conntrack_tcp_timeout_syn_recv = 15 
# Timeout for syn sent (in seconds)
net.netfilter.nf_conntrack_tcp_timeout_syn_sent = 15 
# Timeout for time wait (in seconds)
net.netfilter.nf_conntrack_tcp_timeout_time_wait = 1 

net.netfilter.nf_conntrack_icmp_timeout = 1
net.netfilter.nf_conntrack_icmpv6_timeout = 1
net.netfilter.nf_conntrack_udp_timeout=  15
net.netfilter.nf_conntrack_udp_timeout_stream = 30

### TUNING NETWORK PERFORMANCE ###

# Default Socket Receive Buffer
net.core.rmem_default = 31457280

net.core.rmem_max = 33554432

# Default Socket Send Buffer
net.core.wmem_default = 31457280

# Maximum Socket Send Buffer
net.core.wmem_max = 33554432

# Increase number of incoming connections
net.core.somaxconn = 65535

# Increase number of incoming connections backlog
net.core.netdev_max_backlog = 262144

# Increase the maximum amount of option memory buffers
net.core.optmem_max = 25165824

# Disable MultiPath TCP against security vulnerabilities.
net.mptcp.enabled = 0

# Security hardening.
# --------------------------------
# Prevent BPF_JIT spraying attacks.
net.core.bpf_jit_harden = 2
net.core.default_qdisc = fq
net.core.bpf_jit_kallsyms = 0

# Use TCP MTU Probing when ICMP Blackhole detected.
net.ipv4.tcp_mtu_probing = 1

# Minimum number of stored ARP records is indicated which is not cleared.
net.ipv4.neigh.default.gc_thresh1 = 4096
 
# The amount after which the records begin to be cleaned after 5 seconds
net.ipv4.neigh.default.gc_thresh2 = 8192
 
# The amount upon reaching which the records begin to be cleared immediately
net.ipv4.neigh.default.gc_thresh3 = 16384
 
# How frequently the garbage collector for neighbour entries should attempt to run.
net.ipv4.neigh.default.gc_interval = 5
 
# Determines how often to check for stale neighbour entries. When a neighbour entry is considered stale it is resolved again before sending data to it.
net.ipv4.neigh.default.gc_stale_time = 120 

# The congestion window size in MSS of a TCP connection after it has been idled (no segment received) for a period of one retransmission timeout (RTO).
net.ipv4.tcp_slow_start_after_idle = 0
 
# That defines the minimum and maximum port a networking connection can use as its source (local) port.
net.ipv4.ip_local_port_range = 1024 65535

# The maximum number of IPv4 routes allowed
net.ipv4.route.max_size = 8048576
 
# Ignore all incoming ICMP echo requests
# net.ipv4.icmp_echo_ignore_all = 0

# Disable ICMP Echo Ping Replies.
net.ipv4.icmp_echo_ignore_all = 1

# Ignore ICMP echo requests to broadcast
net.ipv4.icmp_echo_ignore_broadcasts = 1
 
# Don't log invalid responses to broadcast
net.ipv4.icmp_ignore_bogus_error_responses = 1
 
# Set the congestion control algorithm to be used for new connections.
# Possible values: reno (default), cubic, bic, htcp, vegas, westwood.
# net.ipv4.tcp_congestion_control = htcp

# Enable TCP BBR Congestion Control to increase throughput & reduce latency.
# See what is supported by kernel with: cat /proc/sys/net/ipv4/tcp_available_congestion_control
net.ipv4.tcp_congestion_control = bbr
net.core.default_qdisc = fq

# First param:  below this number of pages TCP is not bothered about its memory appetite.
# Second param: when amount of memory allocated by TCP exceeds this number of pages, TCP moderates its memory consumption and enters memory 
#               pressure mode, which is exited when memory consumption falls under "min".
# Third param:  Number of pages allowed for queueing by all TCP sockets.
net.ipv4.tcp_mem = 786432 1048576 26777216

# Increase the maximum total buffer-space allocatable
# This is measured in units of pages (4096 bytes)

# The same as above but for the UDP protocol.
net.ipv4.udp_mem = 65536 131072 262144
 
# First param:  Minimal size of receive buffer used by TCP sockets. It is guaranteed to each TCP socket, even under moderate memory pressure.
# Second param: Initial size of receive buffer used by TCP sockets. This value overrides net.core.rmem_default used by other protocols.
# Third param:  maximal size of receive buffer allowed for automatically selected receiver buffers for TCP socket. 
#               This value does not override net.core.rmem_max.  Calling setsockopt() with SO_RCVBUF disables
#               automatic tuning of that socket's receive buffer size, in which case this value is ignored.
net.ipv4.tcp_rmem = 8192 87380 33554432
    
# First param:  Amount of memory reserved for send buffers for TCP sockets. Each TCP socket has rights to use it due to fact of its birth.
# Second param: initial size of send buffer used by TCP sockets.
# Third param:  Maximal amount of memory allowed for automatically tuned send buffers for TCP sockets.
net.ipv4.tcp_wmem = 8192 65536 33554432
 
# Minimal size of receive buffer used by UDP sockets in moderation.
net.ipv4.udp_rmem_min = 16384

# Minimal size of send buffer used by UDP sockets in moderation.
net.ipv4.udp_wmem_min = 16384
 
# Maximal number of timewait sockets held by system simultaneously. If this number is exceeded time-wait socket is immediately destroyed
net.ipv4.tcp_max_tw_buckets = 1440000
 
# This allows reusing sockets in TIME_WAIT state for new connections when it is safe from protocol viewpoint
net.ipv4.tcp_tw_reuse = 1
 
# Maximal number of TCP sockets not attached to any user file handle, held by system.
# If this number is exceeded orphaned connections are reset immediately and warning is printed.
net.ipv4.tcp_max_orphans = 400000
 
# Enable or disable window scaling as defined in RFC1323.
net.ipv4.tcp_window_scaling = 1
 
# If set, the TCP stack behaves conforming to RFC1337. 
# If unset, we are not conforming to RFC, but prevent TCP TIME_WAIT assassination.
net.ipv4.tcp_rfc1337 = 1
 
# Send out syncookies when the syn backlog queue of a socket overflows. This is to prevent against the common 'SYN flood attack'
net.ipv4.tcp_syncookies = 1

# Number of times SYNACKs for a passive TCP connection attempt will be retransmitted.
net.ipv4.tcp_synack_retries = 1

# Number of times initial SYNs for an active TCP connection attempt will be retransmitted.
net.ipv4.tcp_syn_retries = 2

# Maximal number of remembered connection requests (SYN_RECV), which have not received an acknowledgment from connecting client.
net.ipv4.tcp_max_syn_backlog = 16384

# Enable or disable timestamps as defined in RFC1323 and use random offset for each connection rather than only using the current time.
net.ipv4.tcp_timestamps = 1

# Enable or disable select acknowledgments (SACKS)
# Disable SACK against TCP networking vulnerabilities.
net.ipv4.tcp_sack  = 1
net.ipv4.tcp_fack  = 1
net.ipv4.tcp_dsack = 0 

# Control use of Explicit Congestion Notification (ECN) by TCP. ECN is used only when both ends of the TCP connection indicate support for it.
# 0 Disable ECN
# 1 Enable ECN when requested by incoming connections and also request ECN on outgoing connection attempts.
# 2 Enable ECN when requested by incoming connections but do not request ECN on outgoing connections.
net.ipv4.tcp_ecn = 2
 
# The length of time an orphaned (no longer referenced by any application) connection will remain in the FIN_WAIT_2 state before it is aborted at the local end.
net.ipv4.tcp_fin_timeout = 10
 
# How often TCP sends out keepalive messages when keepalive is enabled.
net.ipv4.tcp_keepalive_time = 300
 
# How frequently the probes are send out. Multiplied by tcp_keepalive_probes it is time to kill not responding connection, after probes started.
net.ipv4.tcp_keepalive_intvl = 15
 
# How many keepalive probes TCP sends out, until it decides that the connection is broken.
net.ipv4.tcp_keepalive_probes = 5
 
# By default, TCP saves various connection metrics in the route cache when the connection closes, so that connections established in the
# near future can use these to set initial conditions.  Usually, this increases overall performance, but may sometimes cause performance degradation.
# If set, TCP will not cache metrics on closing connections.
net.ipv4.tcp_no_metrics_save = 1
 
# Forward Packets between interfaces.
net.ipv4.ip_forward = 0
 
# Accept ICMP redirect messages. (0 = Disabled)
net.ipv4.conf.all.accept_redirects = 0
 
# Send redirects, if router. (0 = Disabled)
net.ipv4.conf.all.send_redirects = 0
 
# Accept packets with SRR option. (0 = Disabled)
net.ipv4.conf.all.accept_source_route = 0
 
#   0 - No source validation.
#   1 - Strict mode as defined in RFC3704 Strict Reverse Path
#	    Each incoming packet is tested against the FIB and if the interface
#	    is not the best reverse path the packet check will fail.
#	    By default failed packets are discarded.
#   2 - Loose mode as defined in RFC3704 Loose Reverse Path
#	    Each incoming packet's source address is also tested against the FIB
#	    and if the source address is not reachable via any interface
#	    the packet check will fail.
net.ipv4.conf.all.rp_filter = 1

# Do multicast routing (0 = Disabled)
# net.ipv4.conf.all.mc_forwarding = 0
 
# Log packets with impossible addresses to kernel log.
net.ipv4.conf.all.log_martians = 1
net.ipv4.conf.default.log_martians = 1

# Disable ARP Proxy, overall protection
net.ipv4.conf.all.proxy_arp = 0
 
# Enable secure redirects, i.e. only accept ICMP redirects for gateways
net.ipv4.conf.all.secure_redirects = 1
 
# Disable bootp_relay
net.ipv4.conf.all.bootp_relay = 0

# Ensure that subsequent connections use the new values
net.ipv4.route.flush = 1 

net.ipv4.ip_no_pmtu_disc = 1 
net.ipv4.tcp_fastopen = 3

# Disable child sockets to inherit the L3 master device index.
net.ipv4.raw_l3mdev_accept = 0 
net.ipv4.tcp_l3mdev_accept = 0
net.ipv4.udp_l3mdev_accept = 0

# Don't reduce window to half the size when TCP Window Scaling is enabled.
# net.ipv4.tcp_workaround_signed_windows = 0

# Disable IGMP reports for link local multicast groups in 224.0.0.x range.
net.ipv4.igmp_link_local_mcast_reports = 0

# Mitigate TCP Attack.
net.ipv4.tcp_challenge_ack_limit = 999999999

# Decrease time for connections to keep alive.
net.ipv4.tcp_keepalive_time = 60
net.ipv4.tcp_keepalive_probes = 10
net.ipv4.tcp_keepalive_intvl = 6

# Increase TCP time wait buckets poolsize against DOS Attacks.
net.ipv4.tcp_max_tw_buckets = 2000000
net.ipv4.tcp_tw_reuse = 1

# Enable FRTO to optimize for wireless hosts (uncomment for wifi).
#net.ipv4.tcp_frto = 2
#net.ipv4.tcp_frto_response = 2

# Enable Low Latency.
net.ipv4.tcp_low_latency = 1

# Don't cache ssthresh from previous connection.
net.ipv4.tcp_no_metrics_save = 1
net.ipv4.tcp_moderate_rcvbuf = 1

# Disable IGMP reports for link local multicast groups in 224.0.0.x range.
net.ipv4.igmp_link_local_mcast_reports=0

# Disable IPSEC encryption.
net.ipv4.conf.eth0.disable_xfrm=1
net.ipv4.conf.default.disable_xfrm=1
net.ipv4.conf.all.disable_xfrm=1
net.ipv4.conf.eth0.disable_policy=1
net.ipv4.conf.default.disable_policy=1
net.ipv4.conf.all.disable_policy=1

# Disable ARP Flux.
net.ipv4.conf.eth0.arp_ignore=1
net.ipv4.conf.default.arp_ignore=1
net.ipv4.conf.all.arp_ignore=1
net.ipv4.conf.eth0.arp_announce=2
net.ipv4.conf.default.arp_announce=2
net.ipv4.conf.all.arp_announce=2

# Disable ARP Proxy.
net.ipv4.conf.eth0.proxy_arp=0
net.ipv4.conf.eth0.proxy_arp_pvlan=0
net.ipv4.conf.default.proxy_arp=0
net.ipv4.conf.default.proxy_arp_pvlan=0
net.ipv4.conf.all.proxy_arp=0
net.ipv4.conf.all.proxy_arp_pvlan=0

# Drop Gratuitous ARP frames to prevent ARP poisoning.
net.ipv4.conf.eth0.drop_gratuitous_arp=1
net.ipv4.conf.default.drop_gratuitous_arp=1
net.ipv4.conf.all.drop_gratuitous_arp=1

# Disable MTU Discovery against security vulnerabilities. 
# If enabled in mode 1 and a fragmentation-required ICMP is  
# received, the PMTU to this destination will be set to 
# min_pmtu. You will need to raise min_pmtu to the smallest 
# interface MTU on your system manually if you want to avoid  
# locally generated fragments.
# In mode 2 incoming Path MTU Discovery messages will be 
# discarded. Outgoing frames are handled the same as in mode 
# 1, implicitly setting IP_PMTUDISC_DONT on every created
# socket.
# Mode 3 is a hardend pmtu discover mode. The kernel will 
# only accept fragmentation-needed errors if the underlying 
# protocol can verify them besides a plain socket lookup. 
# Current protocols for which pmtu events will be honored are 
# TCP, SCTP and DCCP as they verify e.g. the sequence number 
# or the association. This mode should not be enabled 
# globally but is only intended to secure e.g. name servers 
# in namespaces where TCP path mtu must still work but path
# MTU information of other protocols should be discarded. 
# If enabled globally this mode could break other protocols.
net.ipv4.ip_no_pmtu_disc = 2
net.ipv4.ip_forward_use_pmtu = 0
net.ipv4.tcp_mtu_probing = 0

# Limit max rate for sending ICMP packets.
net.ipv4.icmp_ratelimit = 1

# Limit ratemask for ICMP.
net.ipv4.icmp_ratemask = 88089

# Networking 6
# Disable IP source routing.
net.ipv6.conf.eth0.accept_source_route = 0
net.ipv6.conf.default.accept_source_route = 0
net.ipv6.conf.all.accept_source_route = 0

# Disable to accept ICMP Redirects.
net.ipv6.conf.eth0.accept_redirects = 0
net.ipv6.conf.default.accept_redirects = 0
net.ipv6.conf.all.accept_redirects = 0

# Disable ICMP Echo Ping Replies.
net.ipv6.icmp.echo_ignore_all = 1

# Limit max rate for sending ICMP packets.
net.ipv6.icmp.ratelimit = 1

# Disable IPv4 & IPv6 anycast & multicast.
net.ipv6.icmp.echo_ignore_anycast = 1
net.ipv6.icmp.echo_ignore_multicast = 1
net.ipv6.conf.eth0.drop_unicast_in_l2_multicast = 1
net.ipv6.conf.default.drop_unicast_in_l2_multicast = 1
net.ipv6.conf.all.drop_unicast_in_l2_multicast = 1

# Enable IPv6 Privacy Extension.
net.ipv6.conf.eth0.use_tempaddr = 2
net.ipv6.conf.default.use_tempaddr = 2
net.ipv6.conf.all.use_tempaddr = 2

# Disable IPv6 Unsolicited NA.
net.ipv6.conf.eth0.drop_unsolicited_na = 1
net.ipv6.conf.default.drop_unsolicited_na = 1
net.ipv6.conf.all.drop_unsolicited_na = 1

# Number of IPv6 Router Solicitations.
net.ipv6.conf.eth0.router_solicitations = 0
net.ipv6.conf.default.router_solicitations = 0
net.ipv6.conf.all.router_solicitations = 0

# Disable IPv6 Router Preference in RA.
net.ipv6.conf.eth0.accept_ra_rtr_pref = 0
net.ipv6.conf.default.accept_ra_rtr_pref = 0
net.ipv6.conf.all.accept_ra_rtr_pref = 0

# Disable IPv6 Learn Prefix Information in Router Advertisements.
net.ipv6.conf.eth0.accept_ra_pinfo = 0
net.ipv6.conf.default.accept_ra_pinfo = 0
net.ipv6.conf.all.accept_ra_pinfo = 0

# Disable IPv6 Router Advertisement.
net.ipv6.conf.eth0.accept_ra_defrtr = 0
net.ipv6.conf.default.accept_ra_defrtr = 0
net.ipv6.conf.all.accept_ra_defrtr = 0

# Disable IPv6 automatic Router Advertisements to assign a global unicast address to an interface.
net.ipv6.conf.eth0.autoconf = 0
net.ipv6.conf.default.autoconf = 0
net.ipv6.conf.all.autoconf = 0

# Disable IPv6 DAD & Neighbor Solicitations.
net.ipv6.conf.eth0.accept_dad = 0
net.ipv6.conf.default.accept_dad = 0
net.ipv6.conf.all.accept_dad = 0
net.ipv6.conf.eth0.dad_transmits = 0
net.ipv6.conf.default.dad_transmits = 0
net.ipv6.conf.all.dad_transmits = 0
net.ipv6.conf.eth0.enhanced_dad = 0
net.ipv6.conf.default.enhanced_dad = 0
net.ipv6.conf.all.enhanced_dad = 0

# Max IPv6 unicast addresses assigned to each interface.
net.ipv6.conf.eth0.max_addresses = 1
net.ipv6.conf.default.max_addresses = 1
net.ipv6.conf.all.max_addresses = 1

# Disable IPv6 for privacy and security risk!
net.ipv6.conf.eth0.disable_ipv6 = 1
net.ipv6.conf.default.disable_ipv6 = 1
net.ipv6.conf.all.disable_ipv6 = 1